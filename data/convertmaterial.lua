-- parses .material scripts and adds a prefix to the material names generated by the exporter to avoid collisisions
-- (also the material names inside the meshes have to be adjusted, but that can be done inside the application)

function FilePutContents (filepath,data) -- writes the file contents from one big string
	local fp = io.open(filepath,"wb")
	fp:write(data)
	fp:close()
end

for path in io.popen("find units/ -name '*.material'"):lines() do 
	local a,b,prefix = string.find(path,"([^/]+)%.material$")
	assert(prefix)
	print("correcting",path,prefix)
	local newlines = {}
	for line in io.lines(path) do 
		--~ print(line)
		local a,b,matname = string.find(line,"^material%s+(.+)$")
		if (matname and string.find(matname,prefix,nil,true) ~= 1) then
			line = "material "..prefix.."_"..matname
			--~ print("REPLACED:",line)
		end
		table.insert(newlines,line)
	end
	assert(#newlines > 0)
	FilePutContents(path,table.concat(newlines,"\n"))
	--~ print(table.concat(newlines,"\n"))
	--~ os.exit(0)
	--~ MyConvertMatScript()
end



